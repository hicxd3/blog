<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Css on A web development blog about JavaScript, React, Tailwind CSS, Sass, front-end and more — by Cxd3</title>
    <link>http://localhost:1313/css/</link>
    <description>Recent content in Css on A web development blog about JavaScript, React, Tailwind CSS, Sass, front-end and more — by Cxd3</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 01 Mar 2025 12:53:24 +0300</lastBuildDate>
    <atom:link href="http://localhost:1313/css/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mixins in SCSS/SASS Preprocessors</title>
      <link>http://localhost:1313/mixin_in_sass/</link>
      <pubDate>Sat, 01 Mar 2025 12:53:24 +0300</pubDate>
      <guid>http://localhost:1313/mixin_in_sass/</guid>
      <description>&lt;p&gt;Mixins are functions in Sass that allow you to create blocks of styles that can be reused throughout the project. They help avoid repetitive code and make CSS more flexible and convenient to work with. Mixins can take parameters, allowing them to be adapted to various needs.&lt;/p&gt;&#xA;&lt;p&gt;To create a mixin in Sass, use the &lt;code&gt;@mixin&lt;/code&gt; directive followed by the mixin&amp;rsquo;s name and its contents.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-scss&#34; data-lang=&#34;scss&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;@mixin&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt; button-style&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;na&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;na&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#3498db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;na&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;ni&#34;&gt;white&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;na&#34;&gt;border-radius&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;na&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;ni&#34;&gt;none&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nc&#34;&gt;.button&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;@include&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt; button-style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this example, we create a &lt;code&gt;button-style&lt;/code&gt; mixin that defines common button styles. Then, using the &lt;code&gt;@include&lt;/code&gt; directive, we apply the mixin to the &lt;code&gt;.button&lt;/code&gt; class.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Code Fragmentation in SASS Preprocessor</title>
      <link>http://localhost:1313/partials_sass/</link>
      <pubDate>Thu, 20 Feb 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/partials_sass/</guid>
      <description>&lt;p&gt;Fragmentation in SASS means splitting the code into multiple files that can be reused in other parts of the codebase.&lt;/p&gt;&#xA;&lt;p&gt;These files are also called &lt;code&gt;partials&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The content from these files can easily be reused via imports.&lt;/p&gt;&#xA;&lt;p&gt;In practice, this helps simplify code maintenance, reduce duplication, and make styles more modular.&lt;/p&gt;&#xA;&lt;p&gt;To create a partial file, prefix its name with an underscore &lt;code&gt;_&lt;/code&gt;, for example:&#xA;&lt;code&gt;_menu&lt;/code&gt;, &lt;code&gt;_header&lt;/code&gt;, or &lt;code&gt;_buttons&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This naming tells the &lt;code&gt;SASS&lt;/code&gt; compiler that the file is meant to be imported.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nesting in the SASS preprocessor</title>
      <link>http://localhost:1313/nesting_in_sass/</link>
      <pubDate>Tue, 18 Feb 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/nesting_in_sass/</guid>
      <description>&lt;p&gt;The SASS preprocessor allows you to embed&#xA;CSS rules are integrated into each other.&lt;/p&gt;&#xA;&lt;p&gt;The rule nested in the element above applies&#xA;only to its selectors.&lt;/p&gt;&#xA;&lt;p&gt;For example:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;F0F0F0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;graybox&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;A9A9A9&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As a result, we get in the CSS file:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#F0F0F0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;graybox&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#A9A9A9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Using a preprocessor in a project&#xA;helps to avoid repetition of writing&#xA;parent selectors. This makes it much&#xA;easier to write layouts with a large&#xA;amount of nested CSS selectors.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Basics of the SASS preprocessor</title>
      <link>http://localhost:1313/basic_of_sass/</link>
      <pubDate>Sun, 09 Feb 2025 12:53:24 +0300</pubDate>
      <guid>http://localhost:1313/basic_of_sass/</guid>
      <description>&lt;p&gt;SCSS/SASS are CSS preprocessors that extend the capabilities of standard styles. They allow you to use variables, nested selectors, mixins, functions, and other convenient tools, making the code more structured and easier to maintain. SCSS is a syntax similar to CSS, while SASS is a more concise, indented version. Both versions are compiled into regular CSS that browsers understand. These technologies significantly speed up development and simplify work with large projects.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Grid Micro Layouts</title>
      <link>http://localhost:1313/grid_micro_layouts/</link>
      <pubDate>Thu, 26 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/grid_micro_layouts/</guid>
      <description>&lt;h3 id=&#34;repeat&#34;&gt;repeat&lt;/h3&gt;&#xA;&lt;p&gt;If all columns in a grid container should have the same width, the &lt;code&gt;repeat&lt;/code&gt; function is convenient. Inside the parentheses, specify the number of columns and their width, separated by a comma. For example:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;grid-template-columns&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;repeat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;columns&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;column&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This creates three columns of equal width, where &lt;code&gt;1fr&lt;/code&gt; means each column takes an equal share of the available space.&lt;/p&gt;&#xA;&lt;h3 id=&#34;auto-fit&#34;&gt;auto-fit&lt;/h3&gt;&#xA;&lt;p&gt;If the number of columns should automatically adjust to the width of the container, use the &lt;code&gt;auto-fit&lt;/code&gt; value inside the &lt;code&gt;repeat&lt;/code&gt; function instead of a fixed number of columns. For example:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Auto Margins in Flexbox</title>
      <link>http://localhost:1313/base_size_of_flexbox_3/</link>
      <pubDate>Wed, 25 Dec 2024 01:40:24 +0300</pubDate>
      <guid>http://localhost:1313/base_size_of_flexbox_3/</guid>
      <description>&lt;p&gt;The algorithm for calculating the size of flex items and their distribution within a flex container includes three sequential stages. This process is significantly more complex than in the traditional block model.&lt;/p&gt;&#xA;&lt;h3 id=&#34;step-three---applying-auto-margins&#34;&gt;Step Three - Applying Auto Margins&lt;/h3&gt;&#xA;&lt;p&gt;If there is free space in a flex container, it is automatically distributed using the &lt;code&gt;margin&lt;/code&gt; property set to &lt;code&gt;auto&lt;/code&gt; for flex items.&lt;/p&gt;&#xA;&lt;p&gt;In Flexbox, automatic margins (&lt;code&gt;margin: auto&lt;/code&gt;) are much more powerful than in the standard block model. First, they apply in all directions, unlike in block layout where they only work horizontally. Second, auto margins can interact with each other: if multiple auto margins exist on one axis (on different elements or different sides of an element), the free space is evenly distributed among them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Applying Flexible Sizes in Flexbox</title>
      <link>http://localhost:1313/base_size_flexbox2/</link>
      <pubDate>Wed, 25 Dec 2024 01:29:24 +0300</pubDate>
      <guid>http://localhost:1313/base_size_flexbox2/</guid>
      <description>&lt;p&gt;The algorithm for calculating the sizes of flex items and their distribution within a flex container involves three sequential steps. This process is significantly more complex than in the traditional block model.&lt;/p&gt;&#xA;&lt;h3 id=&#34;step-two--applying-flexible-sizes&#34;&gt;Step Two – Applying Flexible Sizes&lt;/h3&gt;&#xA;&lt;p&gt;Let’s start with an example. The width of the flex container is 500px. Inside, there are three flex items, each with a base size of 100px. There is no padding, so the remaining free space in the container is 500px - 300px = 200px.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Base Sizes of Flex Items</title>
      <link>http://localhost:1313/base_sizes_of_flex_in_css/</link>
      <pubDate>Tue, 24 Dec 2024 06:29:24 +0300</pubDate>
      <guid>http://localhost:1313/base_sizes_of_flex_in_css/</guid>
      <description>&lt;p&gt;The algorithm for calculating the sizes of flex items and distributing them within a flex container involves three sequential steps. This process is significantly more complex than in the traditional block model.&lt;/p&gt;&#xA;&lt;h3 id=&#34;step-one--determining-the-base-size-of-flex-items&#34;&gt;Step One – Determining the Base Size of Flex Items&lt;/h3&gt;&#xA;&lt;p&gt;The base size is the size of the item measured along the main axis.&lt;/p&gt;&#xA;&lt;p&gt;The base size is the size a flex item takes without using additional flex model features. It&amp;rsquo;s defined by standard block model properties (e.g., &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;padding&lt;/code&gt;, &lt;code&gt;border&lt;/code&gt;) and the content inside the element.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Display property in CSS</title>
      <link>http://localhost:1313/display_property_in_javascript/</link>
      <pubDate>Sat, 14 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/display_property_in_javascript/</guid>
      <description>&lt;p&gt;A rectangular area corresponds to each HTML element on the page.&#xA;Such areas are called boxes.&lt;/p&gt;&#xA;&lt;p&gt;By default, all HTML elements have certain boxes.&#xA;However, the standard display of the box elements can always be&#xA;changed using the CSS Display property.&lt;/p&gt;&#xA;&lt;p&gt;The type of display immediately affects two things in the document flow:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1 For the location of the box itself.&lt;/li&gt;&#xA;&lt;li&gt;2 Indicates the location of the child elements inside the box.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;For example, the &lt;code&gt;li&lt;/code&gt; element has a default display type.&#xA;&lt;code&gt;display: block&lt;/code&gt; This means that the list items are displayed one below the other on the page.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Page grids and document flow</title>
      <link>http://localhost:1313/page_grids_and_flow/</link>
      <pubDate>Wed, 27 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/page_grids_and_flow/</guid>
      <description>&lt;p&gt;A lecture at the HTML Academy about page grids&lt;/p&gt;&#xA;&lt;p&gt;A grid or layout usually refers to the structure of the relative arrangement of large&#xA;visual blocks on a page.&lt;/p&gt;&#xA;&lt;p&gt;Imagine that the layout is mentally divided into non-intersecting rectangles.&lt;/p&gt;&#xA;&lt;p&gt;First, the largest areas are highlighted, then these areas are divided into smaller ones, and&#xA;so on until the smallest rectangles that represent&#xA;individual words or elements are highlighted.&lt;/p&gt;&#xA;&lt;p&gt;As a result, the entire page will look like a set of nested rectangles,&#xA;starting from the largest and ending with the smallest.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The align-content Property in CSS</title>
      <link>http://localhost:1313/align_content_in_css/</link>
      <pubDate>Sat, 23 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/align_content_in_css/</guid>
      <description>&lt;p&gt;Lecture from HTML Academy on &lt;code&gt;align-content&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;The &lt;code&gt;justify-content&lt;/code&gt; property controls the alignment of flex items along the &lt;strong&gt;main axis&lt;/strong&gt;,&lt;br&gt;&#xA;while &lt;code&gt;align-content&lt;/code&gt; controls the alignment of &lt;strong&gt;rows&lt;/strong&gt; of flex items along the &lt;strong&gt;cross axis&lt;/strong&gt;.&lt;br&gt;&#xA;Both properties share similar values:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;flex-start&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;flex-end&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;center&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;space-between&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;stretch&lt;/code&gt; — available &lt;strong&gt;only&lt;/strong&gt; for &lt;code&gt;align-content&lt;/code&gt;, and it&amp;rsquo;s the default value.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;The &lt;code&gt;align-content&lt;/code&gt; property &lt;strong&gt;overrides&lt;/strong&gt; the value of &lt;code&gt;align-items&lt;/code&gt;,&lt;br&gt;&#xA;which controls the alignment of individual flex items along the cross axis.&lt;br&gt;&#xA;This applies to both &lt;strong&gt;a single row&lt;/strong&gt; and &lt;strong&gt;multiple rows&lt;/strong&gt; of items.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Background in CSS (Part 1)</title>
      <link>http://localhost:1313/background_v_css_1/</link>
      <pubDate>Fri, 22 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/background_v_css_1/</guid>
      <description>&lt;p&gt;The background color of an element in CSS is set using the &lt;code&gt;background-color&lt;/code&gt; property.&lt;/p&gt;&#xA;&lt;p&gt;CSS provides various ways to define colors — such as hexadecimal (HEX), RGB or RGBA formats, or predefined color names.&lt;/p&gt;&#xA;&lt;p&gt;Example:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;red&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ff0000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rgba&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;p&gt;A background image can be set using the CSS property &lt;code&gt;background-image&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Use the following syntax:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;img/image.png&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The image URL must be placed inside the &lt;code&gt;url(&amp;quot;...&amp;quot;)&lt;/code&gt; function.&lt;/p&gt;&#xA;&lt;p&gt;The image address must be specified inside the url(&amp;quot;&amp;hellip;&amp;quot;) function. Background image paths are similar to regular image paths. An element can simultaneously have both a background color and a background image. In this case, the image will appear on top of the background color.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The justify-content Property</title>
      <link>http://localhost:1313/justify-content_property_in_css/</link>
      <pubDate>Thu, 21 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/justify-content_property_in_css/</guid>
      <description>&lt;p&gt;In Flexbox, the &lt;code&gt;justify-content&lt;/code&gt; property allows you to evenly distribute items along the main axis:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;space-between&lt;/code&gt; — equal spacing between adjacent elements, with no space between the elements and the container edges.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;space-around&lt;/code&gt; — equal spacing between elements, but the spacing between the elements and the edges of the container is half the spacing between elements.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;space-evenly&lt;/code&gt; — equal spacing between all elements and the container edges.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The &lt;code&gt;justify-content&lt;/code&gt; property controls how elements are aligned along the main axis and accepts the following values:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Text Styling in CSS</title>
      <link>http://localhost:1313/text_styling_in_css/</link>
      <pubDate>Thu, 14 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/text_styling_in_css/</guid>
      <description>&lt;p&gt;In this lesson, we will go over the most common CSS properties used for text styling.&lt;/p&gt;&#xA;&lt;h2 id=&#34;color&#34;&gt;&lt;code&gt;color&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;color&lt;/code&gt; property sets the text color of an element.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;red&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;text-align&#34;&gt;&lt;code&gt;text-align&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;text-align&lt;/code&gt; property sets the horizontal alignment of the text. Common values:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;left&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;right&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;center&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;justify&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;center&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;text-decoration&#34;&gt;&lt;code&gt;text-decoration&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;text-decoration&lt;/code&gt; property controls the text decoration, such as underline, overline, or line-through.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;text-decoration&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;none&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;text-transform&#34;&gt;&lt;code&gt;text-transform&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;p&gt;This property controls the letter case of the text:&lt;/p&gt;</description>
    </item>
    <item>
      <title>The flex-wrap Property</title>
      <link>http://localhost:1313/flex-wrap_property_in_css/</link>
      <pubDate>Wed, 13 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/flex-wrap_property_in_css/</guid>
      <description>&lt;p&gt;Lecture from HTML Academy about the &lt;code&gt;flex-wrap&lt;/code&gt; property in CSS.&lt;/p&gt;&#xA;&lt;p&gt;If there are more flex items in the container than it can hold, the following will happen:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Items will shrink to the smallest possible size.&lt;/li&gt;&#xA;&lt;li&gt;Even if explicit widths are set, the flexbox model may shrink them.&lt;/li&gt;&#xA;&lt;li&gt;If the items still don’t fit in the container, they will overflow, but stay on a single line.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This behavior can be changed using the &lt;code&gt;flex-wrap&lt;/code&gt; property on the flex container.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Box Model in CSS</title>
      <link>http://localhost:1313/box_model_css/</link>
      <pubDate>Mon, 11 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/box_model_css/</guid>
      <description>&lt;p&gt;Each element on a web page corresponds to a rectangular area known as a box.&lt;/p&gt;&#xA;&lt;p&gt;The box includes:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;1 Content — the actual content of the element;&lt;/li&gt;&#xA;&lt;li&gt;2 Padding — the space between the content and the border;&lt;/li&gt;&#xA;&lt;li&gt;3 Border — the line surrounding the content and padding;&lt;/li&gt;&#xA;&lt;li&gt;4 Margin — the space outside the border, separating the element from others.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../images/box-model.png&#34; alt=&#34;Box Model in CSS&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The appearance of a box on the page is largely determined by its type or the type of its parent element.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cross Axis in Flexbox</title>
      <link>http://localhost:1313/axis_flexbox_in_css/</link>
      <pubDate>Sun, 03 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/axis_flexbox_in_css/</guid>
      <description>&lt;p&gt;In Flexbox, instead of directions like &amp;ldquo;up&amp;rdquo; and &amp;ldquo;down&amp;rdquo;, we use the concept of a &lt;strong&gt;cross axis&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This axis is used for vertical alignment of elements.&lt;/p&gt;&#xA;&lt;p&gt;Illustration:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../images/axis-flexbox.png&#34; alt=&#34;Cross Axis in Flexbox&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The cross axis is always perpendicular to the main axis and rotates with it:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;If the main axis is horizontal, the cross axis points downward.&lt;/li&gt;&#xA;&lt;li&gt;If the main axis is vertical, the cross axis points to the right.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;This behavior may not feel intuitive at first, and takes some getting used to.&lt;/p&gt;</description>
    </item>
    <item>
      <title>flex-direction in CSS</title>
      <link>http://localhost:1313/flex_direction_in_flexbox/</link>
      <pubDate>Sun, 03 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/flex_direction_in_flexbox/</guid>
      <description>&lt;p&gt;In the standard block model, directions like &amp;ldquo;left&amp;rdquo;, &amp;ldquo;right&amp;rdquo;, &amp;ldquo;top&amp;rdquo;, and &amp;ldquo;bottom&amp;rdquo; are fixed.&lt;/p&gt;&#xA;&lt;h3 id=&#34;enabling-flexbox&#34;&gt;Enabling Flexbox&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;However, inside a flex container, these directions can change because the flow of elements can be redefined.&lt;/p&gt;&#xA;&lt;p&gt;Changing the Direction&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;direction&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Default value&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In Flexbox, instead of using &amp;ldquo;left&amp;rdquo; and &amp;ldquo;right&amp;rdquo;, we operate with the concept of the main axis. The flow of flex elements follows this main axis — from its start to its end.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flexbox Basics</title>
      <link>http://localhost:1313/flexbox_basics/</link>
      <pubDate>Sun, 13 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/flexbox_basics/</guid>
      <description>&lt;p&gt;To take advantage of the unique properties of flex (from the English word &amp;ldquo;flexible&amp;rdquo;), you first need to change the element type using the &lt;code&gt;display&lt;/code&gt; property:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A container with &lt;code&gt;display: flex&lt;/code&gt; is called a &lt;strong&gt;flex container&lt;/strong&gt;, and its child elements are called &lt;strong&gt;flex items&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Flex items are automatically arranged along the main axis. By default, the main axis runs from left to right.&lt;/p&gt;&#xA;&lt;img src=&#34;../images/flex1.1.png&#34; /&gt;&#xA;&lt;p&gt;By default, flex items do not wrap onto a new line and shrink to fit their content. Because of this behavior, it&amp;rsquo;s often recommended to set a width or allow wrapping for flex items.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Grid In Css</title>
      <link>http://localhost:1313/grid_in_css/</link>
      <pubDate>Sat, 12 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/grid_in_css/</guid>
      <description>&lt;p&gt;A box container of the grid type contains child elements called grid items.&lt;br&gt;&#xA;Although the grid container looks like a regular block-level element for other elements like main content, the grid items inside behave differently.&lt;/p&gt;&#xA;&lt;p&gt;For example, even inline elements begin to take up the full available area, and the margins of elements inside a grid container behave differently too.&lt;/p&gt;&#xA;&lt;p&gt;By default, a grid container has a single column.&lt;br&gt;&#xA;To change this, you need to define a grid template using the &lt;code&gt;grid-template-columns&lt;/code&gt; property.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Margin and Padding in CSS</title>
      <link>http://localhost:1313/margin_and_padding/</link>
      <pubDate>Sat, 12 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/margin_and_padding/</guid>
      <description>&lt;h3 id=&#34;the-padding-property&#34;&gt;The &lt;code&gt;padding&lt;/code&gt; Property&lt;/h3&gt;&#xA;&lt;p&gt;Padding is the space between the content of an element and its border.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../images/padding.png&#34; alt=&#34;Padding Example&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The inner spacing of an element is set using the &lt;code&gt;padding&lt;/code&gt; property. If the padding is the same on all sides, you can simply write:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;main__content&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is called shorthand syntax.&lt;/p&gt;&#xA;&lt;p&gt;If the paddings differ on each side, you can use the full syntax, specifying each side separately:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;main__content&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;padding-top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;padding-right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;padding-bottom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;padding-left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;padding-top&lt;/code&gt; adds space at the top&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;padding-right&lt;/code&gt; on the right&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;padding-bottom&lt;/code&gt; at the bottom&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;padding-left&lt;/code&gt; on the left&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;the-margin-property&#34;&gt;The &lt;code&gt;margin&lt;/code&gt; Property&lt;/h3&gt;&#xA;&lt;p&gt;Margin is the space between the outer border of an element and the boundaries of its parent or neighboring elements.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Units of Measurement in CSS</title>
      <link>http://localhost:1313/units_of_measurement_in_css/</link>
      <pubDate>Tue, 08 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/units_of_measurement_in_css/</guid>
      <description>&lt;p&gt;Units of measurement in CSS are used to define the sizes of elements, spacing, fonts, and other properties.&#xA;They are divided into &lt;strong&gt;absolute&lt;/strong&gt; and &lt;strong&gt;relative&lt;/strong&gt; types.&lt;/p&gt;&#xA;&lt;p&gt;This lecture covers five core units: &lt;code&gt;px&lt;/code&gt;, &lt;code&gt;em&lt;/code&gt;, &lt;code&gt;rem&lt;/code&gt;, &lt;code&gt;fr&lt;/code&gt;, and &lt;code&gt;%&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;pixels-px&#34;&gt;Pixels &lt;code&gt;px&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;p&gt;A pixel can be &lt;strong&gt;physical&lt;/strong&gt; or &lt;strong&gt;CSS-pixel&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A physical pixel is a single cell on a device&amp;rsquo;s screen matrix.&#xA;For example, if a screen width is 480px, this means there are 480 indivisible cells across it.&lt;/li&gt;&#xA;&lt;li&gt;A CSS pixel is a CSS unit equal to 1/96 of an inch.&#xA;One CSS pixel does not always correspond to a physical screen cell — it depends on the screen density.&#xA;The more physical pixels per inch, the more detailed the image.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;content__main&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FFA181&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;font-size-rem&#34;&gt;Font Size &lt;code&gt;rem&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;p&gt;The &lt;code&gt;rem&lt;/code&gt; unit is relative to the root element’s font size (usually the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; tag).&#xA;For example, if the root font size is &lt;code&gt;16px&lt;/code&gt;, then:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Value Types in CSS</title>
      <link>http://localhost:1313/value_types_in_css/</link>
      <pubDate>Tue, 08 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/value_types_in_css/</guid>
      <description>&lt;h3 id=&#34;absolute-values&#34;&gt;Absolute Values&lt;/h3&gt;&#xA;&lt;p&gt;The simplest type of values are absolute values, such as pixels. They are used to define the size of elements, text, and other properties.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;1000px&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;16px&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Absolute values are advantageous because they are finite, clear, and easy to understand.&lt;/p&gt;&#xA;&lt;h3 id=&#34;relative-values&#34;&gt;Relative Values&lt;/h3&gt;&#xA;&lt;p&gt;The magnitude of relative values is not immediately clear — you must first know the previous value, multiply it, and only then get the output.&lt;/p&gt;&#xA;&lt;p&gt;Relative values, unlike absolute ones, are more complex because they are not fixed — they depend on other values.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nested Selectors in CSS</title>
      <link>http://localhost:1313/nested_selectors_css/</link>
      <pubDate>Sun, 06 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/nested_selectors_css/</guid>
      <description>&lt;h3 id=&#34;nested-or-contextual-selector-in-css&#34;&gt;Nested or Contextual Selector in CSS&lt;/h3&gt;&#xA;&lt;p&gt;This type of selector is a combination of two selectors separated by a space. These selectors are known as nested or contextual and are interpreted from right to left. It’s important to note that these references can be directly within the specified class tag or within nested tags at any depth.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;nav__list&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c&#34;&gt;/* Targeting the &amp;lt;a&amp;gt; tag inside the .nav__list class */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can combine any type of selectors using a space. In the example below, the selector targets all elements with the class &lt;code&gt;warning&lt;/code&gt; that are inside elements with the class &lt;code&gt;text&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CSS Selectors</title>
      <link>http://localhost:1313/css_selectors/</link>
      <pubDate>Thu, 03 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/css_selectors/</guid>
      <description>&lt;p&gt;CSS is a language that is used to design HTML documents. Its syntax is much simpler than that of HTML, since CSS lacks complex rules related to the nesting of elements. In fact, CSS is a rather &amp;ldquo;flat&amp;rdquo; language where nesting is hardly used. A typical CSS file consists of a sequence of CSS rules. Each CSS rule includes a selector and a list of properties with corresponding values. Here is an example of a simple CSS rule:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Background in CSS 2</title>
      <link>http://localhost:1313/background_css_2/</link>
      <pubDate>Mon, 30 Sep 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/background_css_2/</guid>
      <description>&lt;h2 id=&#34;image-formats&#34;&gt;Image Formats&lt;/h2&gt;&#xA;&lt;h3 id=&#34;jpeg-format&#34;&gt;JPEG Format&lt;/h3&gt;&#xA;&lt;p&gt;The JPEG format works great for photos and paintings but is not well suited for diagrams, blueprints, text, and graphics.&lt;/p&gt;&#xA;&lt;p&gt;When saving an image as JPEG, you can adjust the quality level. If the quality is set too low, artifacts may appear.&lt;/p&gt;&#xA;&lt;p&gt;JPEG does not support transparency, so the image will always be rectangular. To simulate transparency, you can set the image background in your graphics editor to match the container where it will be placed.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
